package com.Abdo_Fahmi.Recipe_Bank;

import com.Abdo_Fahmi.Recipe_Bank.recipe.Ingredient.Ingredient;
import com.Abdo_Fahmi.Recipe_Bank.recipe.Ingredient.IngredientType;
import com.Abdo_Fahmi.Recipe_Bank.recipe.Recipe;
import com.Abdo_Fahmi.Recipe_Bank.recipe.RecipeCreationRequest;
import com.Abdo_Fahmi.Recipe_Bank.recipe.RecipeDTO;
import com.Abdo_Fahmi.Recipe_Bank.recipe.RecipeProxyDTO;

import java.util.Arrays;
import java.util.HashSet;

public class TestData {

    public static Recipe testEntity() {
        // Some fields will be null as they are generated by the DB
        return Recipe.builder()
                .id(null)
                .name("Sample Recipe")
                .description("This is a sample recipe.")
                .tags(new HashSet<>(Arrays.asList("Tag1", "Tag2")))
                .ingredients(Arrays.asList(
                        new Ingredient("Flour", "200", IngredientType.GRAM),
                        new Ingredient("Water", "500", IngredientType.MILLILITER)))
                .instructions(Arrays.asList("Step 1: Mix ingredients", "Step 2: Bake"))
                .isPublic(true)
                .creationDate(null)
                .lastModifiedDate(null)
                .ownerId("user1")
                .build();
    }

    public static RecipeCreationRequest testCreationRequest() {
        return RecipeCreationRequest.builder()
                .name("Sample Recipe")
                .description("This is a sample recipe.")
                .tags(new HashSet<>(Arrays.asList("Tag1", "Tag2")))
                .ingredients(Arrays.asList(
                        new Ingredient("Flour", "200", IngredientType.GRAM),
                        new Ingredient("Water", "500", IngredientType.MILLILITER)))
                .instructions(Arrays.asList("Step 1: Mix ingredients", "Step 2: Bake"))
                .isPublic(true)
                .build();
    }

    public static RecipeProxyDTO testProxy() {
        return RecipeProxyDTO.builder()
                .id("recipe1")
                .name("Sample Recipe")
                .description("This is a sample recipe.")
                .build();
    }

    public static RecipeDTO testDTO() {
        return RecipeDTO.builder()
                .id("recipe1")
                .name("Sample Recipe")
                .description("This is a sample recipe.")
                .tags(new HashSet<>(Arrays.asList("Tag1", "Tag2")))
                .ingredients(Arrays.asList(
                        new Ingredient("Flour", "200", IngredientType.GRAM),
                        new Ingredient("Water", "500", IngredientType.MILLILITER)))
                .instructions(Arrays.asList("Step 1: Mix ingredients", "Step 2: Bake"))
                .isPublic(true)
                .ownerId("user1")
                .build();
    }
}
